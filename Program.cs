using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _2DTEXTBASEDMAP
{
    class Program
    {
        static char[,] map = new char[,] // dimensions defined by following data:
     {
        {'^','^','^','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\''},
        {'^','^','\'','\'','\'','\'','*','*','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','~','~','~','\'','\'','\''},
        {'^','^','\'','\'','\'','*','*','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','~','~','~','\'','\'','\'','\'','\''},
        {'^','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\''},
        {'\'','\'','\'','\'','~','~','~','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\''},
        {'\'','\'','\'','\'','~','~','~','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\''},
        {'\'','\'','\'','~','~','~','~','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','^','^','\'','\'','\'','\'','\'','\''},
        {'\'','\'','\'','\'','\'','~','~','~','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','^','^','^','^','\'','\'','\'','\'','\''},
        {'\'','\'','\'','\'','\'','~','~','~','~','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','^','^','^','^','\'','\'','\''},
        {'\'','\'','\'','\'','\'','\'','\'','~','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\''},
        {'\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\''},
        {'\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\'','\''},
     };
        // map legend:
        // ^ = mountain
        // ' = grass
        // ~ = water
        // * = trees
        // map legend:
        // ^ = mountain
        // ' = grass
        // ~ = water
        // * = trees



        static void Main(string[] args)
        {
            drawMap();
            drawMap(2);
            drawMap(3);
            Console.ReadKey(true);
        }


        static void drawMap()
        {
            Console.Write("┌");
            for (int border = 0; border < map.GetLength(1); border++)
            {
                Console.Write("─");
            }
            Console.WriteLine("┐");
            
            for (int y = 0; y < map.GetLength(0); y++) 
            {
                Console.Write("│");
                for (int x = 0; x < map.GetLength(1); x++)
                {
                    Console.Write(map[y, x]);
                }
                Console.WriteLine("│");
             

            }
            Console.Write("└");
            for (int border = 0; border < map.GetLength(1); border++)
            {
                Console.Write("─");
            }
            Console.WriteLine("┘");
        }
        static void drawMap(int scale)
        {
            Console.Write("┌");
            for (int border = 0; border < map.GetLength(1) * scale; border++)
            {
                Console.Write("─");
            }
            Console.WriteLine("┐");

            for (int y = 0; y < map.GetLength(0); y++)
            {
                
                for (int i = 0; i < scale; i++)
                {
                    Console.Write("│");
                    for (int x = 0; x < map.GetLength(1); x++)
                    {
                        for (int j = 0; j < scale; j++)
                        {
                            Console.Write(map[y, x]);
                        }
                        
                    }
                    Console.WriteLine("│");
                }
            }
            Console.Write("└");
            for (int border = 0; border < map.GetLength(1) * scale; border++)
            {
                Console.Write("─");
            }
            Console.WriteLine("┘");
        }
    }
}
